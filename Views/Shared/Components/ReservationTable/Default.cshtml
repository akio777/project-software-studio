@model LabReservation.Models.ReserveConfirm

@{
    var currentDateTime = DateTime.Now;
}

<script type="text/javascript">
    @* function confirmHandler() {
        document.getElementById("myAnchor").addEventListener("click", function (event) {
        event.preventDefault()
        });
        } *@
</script>

<link rel="stylesheet" type="text/css" href="~/css/site.css" />
<link rel="stylesheet" type="text/css" href="css/reservationTable.css">

<form id="myAnchor" asp-action="Confirm" method="post">
    <button type="submit" onclick="confirmHandler()">Confirm</button>
    <input name="test" type="number" asp-for="test" />
</form>

<table class="reservation-table-container">
    <thead class="reservation-table-header">
        <tr>
            <th></th>
            <th>
                <div>@currentDateTime.ToString("ddd")</div>
                <div>Today</div>
            </th>
            <th>
                <div>@currentDateTime.AddDays(1).ToString("ddd")</div>
                <div>@currentDateTime.AddDays(1).ToString("d MMM")</div>
            </th>
            <th>
                <div>@currentDateTime.AddDays(2).ToString("ddd")</div>
                <div>@currentDateTime.AddDays(2).ToString("d MMM")</div>
            </th>
            <th>
                <div>@currentDateTime.AddDays(3).ToString("ddd")</div>
                <div>@currentDateTime.AddDays(3).ToString("d MMM")</div>
            </th>
            <th>
                <div>@currentDateTime.AddDays(4).ToString("ddd")</div>
                <div>@currentDateTime.AddDays(4).ToString("d MMM")</div>
            </th>
            <th>
                <div>@currentDateTime.AddDays(5).ToString("ddd")</div>
                <div>@currentDateTime.AddDays(5).ToString("d MMM")</div>
            </th>
            <th>
                <div>@currentDateTime.AddDays(6).ToString("ddd")</div>
                <div>@currentDateTime.AddDays(6).ToString("d MMM")</div>
            </th>
        </tr>
    </thead>
    <tbody class="reservation-table-content">
        <tr>
            <td>08:00<br>-<br>09:00</td>
            @for (int i = 0; i < 7; i++)
            {
                <td>
                    <div>
                        @await Component.InvokeAsync("CircularButton", new { key = i+"0" })
                    </div>
                </td>
            }
        </tr>
        <tr>
            <td>09:00<br>-<br>10:00</td>
            @for (int i = 0; i < 7; i++)
            {
                <td>
                    <div>
                        @await Component.InvokeAsync("CircularButton", new { key = i+"1" })
                    </div>
                </td>
            }
        </tr>
        <tr>
            <td>10:00<br>-<br>11:00</td>
            @for (int i = 0; i < 7; i++)
            {
                <td>
                    <div>
                        @await Component.InvokeAsync("CircularButton", new { key = i+"2" })
                    </div>
                </td>
            }
        </tr>
        <tr>
            <td>11:00<br>-<br>12:00</td>
            @for (int i = 0; i < 7; i++)
            {
                <td>
                    <div>
                        @await Component.InvokeAsync("CircularButton", new { key = i+"3" })
                    </div>
                </td>
            }
        </tr>
        <tr>
            <td>12:00<br>-<br>13:00</td>
            @for (int i = 0; i < 7; i++)
            {
                <td>
                    <div>
                        @await Component.InvokeAsync("CircularButton", new { key = i+"4" })
                    </div>
                </td>
            }
        </tr>
        <tr>
            <td>13:00<br>-<br>14:00</td>
            @for (int i = 0; i < 7; i++)
            {
                <td>
                    <div>
                        @await Component.InvokeAsync("CircularButton", new { key = i+"5" })
                    </div>
                </td>
            }
        </tr>
        <tr>
            <td>14:00<br>-<br>15:00</td>
            @for (int i = 0; i < 7; i++)
            {
                <td>
                    <div>
                        @await Component.InvokeAsync("CircularButton", new { key = i+"6" })
                    </div>
                </td>
            }
        </tr>
        <tr>
            <td>15:00<br>-<br>16:00</td>
            @for (int i = 0; i < 7; i++)
            {
                <td>
                    <div>
                        @await Component.InvokeAsync("CircularButton", new { key = i+"7" })
                    </div>
                </td>
            }
        </tr>
        <tr>
            <td>16:00<br>-<br>17:00</td>
            @for (int i = 0; i < 7; i++)
            {
                <td>
                    <div>
                        @await Component.InvokeAsync("CircularButton", new { key = i+"8" })
                    </div>
                </td>
            }
        </tr>
        <tr>
            <td>17:00<br>-<br>18:00</td>
            @for (int i = 0; i < 7; i++)
            {
                <td>
                    <div>
                        @await Component.InvokeAsync("CircularButton", new { key = i+"9" })
                    </div>
                </td>
            }
        </tr>
    </tbody>
</table>
