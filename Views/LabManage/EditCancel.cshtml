@model LabReservation.Models.LabManageInfoProps
@{
    ViewData["Title"] = @Model.labManageInfo.name + " Management";
}

<link rel="stylesheet" type="text/css" href="~/css/labmanageCancelLayout.css">

<div class="layout">
    <div class="page-nav">
        <a asp-controller="LabManage" asp-action="Index">
            <button><i class="fa fa-chevron-left"></i>&ensp;Back</button>
        </a>
        <button class="edit-btn"><i class="fa fa-pen"></i>&ensp;Edit Lab</button>
    </div>
    <div class="layout-main">
        <div class="header">
            <h1>@Model.labManageInfo.name</h1>
            <div class="info-wrapper">
                <div class="info-box">
                    <p class="head">Equipment</p>
                    <p class="info">@Model.labManageInfo.equip</p>
                </div>
                <div class="info-box">
                    <p class="head">Amount</p>
                    <p class="info">@Model.equipment.maximum</p>
                </div>
            </div>
        </div>
        <div class="detail">
            <h3>Cancel Reservation</h3>
            <p>Select time slot to cancel reservation</p>
        </div>
        <div>
            @await Component.InvokeAsync("CancelReservationTable", new { labManageInfoProps = @Model})
        </div>
        <div id="editModal" style="display: none">
            @await Component.InvokeAsync("EditLab", new {labManageInfo=@Model.labManageInfo})
        </div>
    </div>
</div>

<script>
    var editModal = document.getElementById("editModal")
    var editBtn = document.querySelector(".edit-btn")
    editBtn.onclick = function () {
        editModal.style.display = "block"
    }

</script>